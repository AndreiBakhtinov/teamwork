Должен быть загружен на Гите ключ SSH
Проверить
git config --global -l
если нет – зать имя пользователя и мейл

выдает --

user.name=VMalakhatka
user.email=vmalakhatka@gmail.com

Новый репозитой – создаем на GIT –
Задаем имя
Делаем его Public
Создаем readme  файл
- это типа создали готовый репозиторий на гите – теперь его копируем на комп

Копируем ссылку SSH
Git clone “Сылка SHH с гита”

-	Показывает статус текущего репозитория – проверяет с каким удаленным репозиторием мы связаны
git remote -v
origin	git@github.com:VMalakhatka/GIT_070223.git (fetch)
origin	git@github.com:VMalakhatka/GIT_070223.git (push)

дает информацию какие файлы и в каком состоянии находятся в этом репозитории
git status


git add . – добавляет файлы в индексное пространство гита

git commit -m “Comment” – комитит файлы

git push – отпраляет файлы во внешнее хранилище

git log -показывает историю комитов в обратном порядке
    --oneline  - ключ для сокращенной версии


git fetch – получает изменения с гита – но не вливает в ваши вайлы marge

git pull – делает сразу две операции fetch и marge


СОЗДАНИЕ репозитории со своей локальной папки

в папке инициализируем репозиторий

git init
добавляем файлы в индекс
git add .

git commit -m “Comment First commit”

создаем новый репозиторий на GIT лучше без readme – пустой репозиторий

связываем наш удаоенный репозиторий с локальным

git remote ad origin “тут ссылка на наш репозиторий ”

git branch -M main – переименовываем ветку в main

git push -u origin main. – первый раз в пустой репозиторий удаленный – создает там ветку main

 git checkout . – вернуть все последние комиты – те все изменения после последнего комита исчезнут

git clean -xdf – почистить локальный репозиторий от незакоммиченных файлов (они типа ненужны)

git clean -xdn – показать локальный репозиторий что можно почистить
от незакоммиченных файлов (они типа ненужны)

git commit --amend -m "New coment"
-	Новый комент на последний комит

git reset HEAD~1 – возращает в локальной репозитории на несколько шагов назад комиты


если надо исправить уже запушенный комит
git revert HEAD –  откатывает на комит назад – после чего надо сделать add commit push – как для правильного


git push –force – запушить все равно игнорируюя все ошибки – если только я использую

git branch -v – показывает какие ветки существуют

git branch test1 создает новые ветки

git checkout test1 – switch to test1 ,

git checkout -b test – create and switch to test-- but I switch from test1 and this(test – branched from test1) – this is bad

git branch -d test – deleted branch test(you mast be not in test)



git log --oneline --decorate --graph –all

git push --set-upstream origin test2
-- new branch created



создание новой ветки своей задачи общего проекта проекта



на GitHUb создаем новую задачу issues – и описываем ее

git checkout -b GitHub_1_Make_New_Song-
создаем новую веку из текущей (запуленной ранне рабочей ветки команды)

работаем в ней – делаемм add b commit-ы

делаем push – он говорит что нет такой ветки и предлагает
git push --set-upstream origin GitHub_1_Make_New_Song
пушить с созданием новой ветки
но должна была отработать команда (по словам Вячеслава – мы ее получили подсказкой с попытки сделать pull с ветки GitHub_1_Make_New_Song )
git branch --set-upstream-to=origin/GitHub_1_Make_New_Song


после этого в Гит Хабе можно смержить две ветки
для этого нажимаем Pull request – и выбираем что куда мержим
нажимаем Create Pull request

после этого как начальник смержил проект – подтвердил наши пулы

мы должны сделать пулл – на нашу основную ветку(локально ) – чтобы продолжить работу с текущим исправленным проектом

после чего можем опять переключиться на свою ветку
и смержить ее с main
git merge main

после завершения работы над своей задачей
git branch -d GitHub_1_Make_New_Song



создание новой ветки ЧУЖОЙ задачи общего проекта проекта


получаем ссылку на гит чужой
Форкаем его себе
- копируем ссылку и делаем
git clone git@github.com:VMalakhatka/GitTest1.git

после чего переходим в раб каталог и создаем новую ветку для работы

git checkout -b NewSongBranch

работаем создаем новое

после add commit и пушш или git push --set-upstream origin NewSongBranch






